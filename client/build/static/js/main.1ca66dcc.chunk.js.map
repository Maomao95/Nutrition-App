{"version":3,"sources":["graphql/index.tsx","components/Context.tsx","components/theme.tsx","components/ItemRow.tsx","components/Items.tsx","components/AddDessert.tsx","components/Home.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["client","ApolloClient","uri","cache","InMemoryCache","NUTRITION_DATA","gql","tableHeaders","useNutrition","useContext","NutritionContext","RegExp","React","createContext","Context","children","useQuery","pollInterval","loading","error","data","refetch","useState","selected","setSelected","resetState","setResetState","index","order","sort","setSort","sortedData","setSortedData","window","innerWidth","windowWidth","setwindow","handleResize","useEffect","addEventListener","undefined","newSortedData","desserts","a","b","nutritionInfo","Provider","value","myTheme","root","flexGrow","paper","display","flexDirection","justifyContent","height","textAlign","borderRadius","boxShadow","tableHead","backgroundColor","tableItem","heading2","button","color","heading","heading2_text","margin","addButton","deleteButton","arrowStyle","opacity","generalArrowStyle","useStyles","makeStyles","theme","ItemRow","item","classes","id","dessert","reset","visible","items","calories","fat","carb","protein","st","checked","setChecked","length","indexOf","checkStyle","marginLeft","paddingLeft","paddingRight","itemMarkup","Grid","sm","xs","onClick","newSelected","splice","push","Paper","className","Checkbox","inputProps","style","map","Typography","variant","Items","markupData","CircularProgress","arrowDir","headermarkup","Button","handleSort","size","container","spacing","ADD_DESSERT","AddDessert","open","setOpen","editState","setEditState","useMutation","addDessert","setError","handleClose","handleChange","event","target","hidden","Dialog","onClose","aria-labelledby","DialogTitle","DialogContent","TextField","autoFocus","onChange","name","label","type","fullWidth","required","DialogActions","variables","parseInt","DELETE_DESSERT","MAKE_INVISIBLE","UPDATE_VISIBILITY","Home","deleteDessert","makeInvisible","updateDessertVisibility","forEach","fileInput","document","getElementById","click","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","Fragment"],"mappings":"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","file":"static/js/main.1ca66dcc.chunk.js","sourcesContent":["import { ApolloClient, InMemoryCache } from '@apollo/client';\n\nexport const client = new ApolloClient({\n    uri: 'https://shrouded-bayou-24550.herokuapp.com/graphql',\n    cache: new InMemoryCache()\n});","import React, {useContext, useState, useEffect} from 'react'\nimport { useQuery, gql } from '@apollo/client';\n\nconst NUTRITION_DATA = gql`\n  query {\n    desserts {\n      id,\n      dessert,\n      reset,\n      visible,\n      nutritionInfo {\n        calories\n        fat\n        carb\n        protein\n      }\n    }\n  }\n`;\n\nconst tableHeaders = [\n    \"calories\",\n    \"fat\",\n    \"carb\",\n    \"protein\"\n];\n\ninterface Nutritiontype {\n    [key: string]: number\n}\n\n\ninterface DessertType {\n    id: number,\n    nutritionInfo: Nutritiontype,\n    dessert: string,\n    reset: boolean,\n    visible: boolean\n}\n\ninterface AllDesserts {\n    desserts: DessertType[];\n}\n\ninterface Sort {\n    [key: string] : number\n}\n\nexport function useNutrition() {\n    return useContext(NutritionContext);\n}\nvar varExtractor = new RegExp(\"return (.*);\");\nexport function getVariableName<TResult>(name: () => TResult) {\n    var m = varExtractor.exec(name + \"\");\n    if (m == null) throw new Error(\"The function does not contain a statement matching 'return variableName;'\");\n    return m[1];\n}\n\n\nconst NutritionContext = React.createContext<any | null>(null);\n\n\nconst Context: React.FC = ({children}) => {\n    \n    const {loading, error, data, refetch} = useQuery<AllDesserts>(NUTRITION_DATA,{\n        pollInterval: 500,\n    });\n    const [selected, setSelected] = useState([]);\n    const [resetState, setResetState] = useState([]);\n    const [sort, setSort] = useState<Sort>({index: 0, order: 0});\n    const [sortedData, setSortedData] = useState<AllDesserts>();\n    const [windowWidth, setwindow] = useState(window.innerWidth);\n\n    const handleResize = () => {\n        setwindow(window.innerWidth)\n    }\n\n    useEffect(() => {\n        \n        window.addEventListener('resize', handleResize)\n    }, [])\n\n\n    useEffect(() => {\n        if(data !== undefined)\n            setSortedData(data);\n        if(sort.index !== null && data !==undefined) {\n            let newSortedData = [...data.desserts];\n            newSortedData.sort((a, b) => {\n                return sort.order ? \n                a.nutritionInfo[tableHeaders[sort.index - 1]] - b.nutritionInfo[tableHeaders[sort.index - 1]] : \n                b.nutritionInfo[tableHeaders[sort.index - 1]] - a.nutritionInfo[tableHeaders[sort.index - 1]]\n            });\n            \n            setSortedData({desserts : newSortedData});\n        }\n        \n    }, [sort, data])\n    \n    \n    return (\n        <NutritionContext.Provider \n        value ={ {\n                selected,\n                setSelected,\n                loading,\n                error,\n                data: sortedData ? sortedData : data,\n                refetch,\n                resetState,\n                setResetState,\n                sort,\n                setSort,\n                windowWidth\n                }}>\n            {children}\n        </NutritionContext.Provider>\n    )\n}\n\nexport default Context\n","export const myTheme = {\n    root: {\n      flexGrow: 1\n      \n    },\n    paper: {\n      display: \"flex\",\n      flexDirection: \"column\" as 'column',\n      justifyContent: \"center\",\n      height: \"60px\",\n      textAlign: 'center' as 'center',\n      borderRadius: 0,\n      boxShadow: \"none\"\n    },\n    tableHead: {\n      display: \"flex\",\n      flexDirection: \"column\" as 'column',\n      justifyContent: \"center\",\n      height: \"60px\",\n      textAlign: 'center' as 'center',\n      borderRadius: 0,\n      boxShadow: \"none\",\n      backgroundColor: \"#ffb74d\"\n    },\n    tableItem: {\n      display: \"flex\",\n      flexDirection: \"column\" as 'column',\n      justifyContent: \"center\",\n      height: \"60px\",\n      textAlign: 'center' as 'center',\n      borderRadius: 0,\n      boxShadow: \"none\",\n      backgroundColor: \"#fff3e0\"\n    },\n    heading2: {\n      display: \"flex\",\n      flexDirection: \"column\" as 'column',\n      justifyContent: \"center\",\n      height: \"60px\",\n      textAlign: 'left' as 'left',\n      borderRadius: 0,\n      boxShadow: \"none\"\n    },\n    button: {\n      height: \"100%\",\n      backgroundColor: \"#8bc34a\",\n      color: \"#fff\",\n      borderRadius: 0,\n      '&:hover' : {\n        backgroundColor: \"#aed581\"\n      }\n    },\n    heading: {\n      color: \"#00695c\"\n    },\n    heading2_text: {\n      margin: \"auto\"\n    },\n    addButton: {\n      height: \"100%\",\n      backgroundColor: \"#29b6f6\",\n      color: \"#fff\",\n      borderRadius: \"0\",\n      '&:hover' : {\n        backgroundColor: \"#81d4fa\"\n      }\n    },\n    deleteButton: {\n      height: \"100%\",\n      backgroundColor: \"#ef5350\",\n      color: \"#fff\",\n      borderRadius: \"0\",\n      '&:hover' : {\n        backgroundColor: \"#ef9a9a\"\n      }\n    },\n    arrowStyle: {\n      color: \"#000\",\n      opacity: \"100%\"\n    },\n    generalArrowStyle : {\n      opacity: \"30%\"\n    }\n  \n  }","import React, {Fragment, useState, useEffect, FunctionComponent } from 'react'\nimport {myTheme} from './theme'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Paper from '@material-ui/core/Paper';\nimport { Typography } from '@material-ui/core';\nimport { useNutrition } from './Context';\n\nconst useStyles = makeStyles((theme) => (myTheme));\n\ninterface Items {\n    id: any,\n    dessert: any,\n    reset: any,\n    visible: any,\n    nutritionInfo: any\n}\n\nconst ItemRow: FunctionComponent<{item: any}> = ({item}) => {\n    const classes = useStyles();\n\n    const {id, dessert, reset, visible, nutritionInfo} = item;\n    const {calories, fat, carb, protein} = nutritionInfo;\n    const items = [dessert, calories, fat, carb, protein];\n    let {selected, \n        setSelected, \n        resetState, \n        setResetState,\n        windowWidth\n    } = useNutrition();\n\n    \n    const st = [[selected, setSelected], [resetState, setResetState]];\n    const [checked, setChecked] = React.useState(false);\n    useEffect(() => {\n        let index = 0;\n        if(reset) index = 1;\n        if(st[index][0].length === 0 && checked) {\n            setChecked(!checked);\n        }\n        if(checked && st[index][0].length > 0 && st[index][0].indexOf(id) === -1) {\n            setChecked(!checked);\n        }\n        if(!checked && st[index][0].length > 0 && st[index][0].indexOf(id) !== -1) {\n            setChecked(!checked);\n        }\n    }, [selected, resetState, id]);\n\n    \n    const handleSelection = () => {\n        let index = 0;\n        if(reset) index = 1;\n        \n        if(checked  && st[index][0].length > 0 && st[index][0].indexOf(id) !== -1) {\n            let newSelected = [...st[index][0]];\n            newSelected.splice(st[index][0].indexOf(id), 1);\n            st[index][1](newSelected);\n        } \n        if(!checked && (st[index][0].length === 0 || st[index][0].indexOf(id) === -1)) {\n            let newSelected = [...st[index][0]];\n            newSelected.push(id);\n            st[index][1](newSelected);\n        }\n        setChecked(!checked)\n    }\n    const checkStyle = {\n        marginLeft: windowWidth < 800 ? \"10px\" : \"inherit\",\n        paddingLeft:  windowWidth < 800 ? \"40px\" : \"inherit\",\n        paddingRight:  windowWidth < 800 ? \"80px\" : \"inherit\"\n    }\n    let itemMarkup = (\n        <Fragment>\n        <Grid item sm={1} xs={1} onClick={handleSelection}>\n        <Paper className={classes.tableItem}>\n            <Checkbox\n            checked={checked}\n            //onChange={handleSelection}\n            inputProps={{ 'aria-label': 'primary checkbox' }}\n            style={checkStyle}\n            />\n            </Paper>\n        </Grid>\n        {items.map((item, index) => {\n            return (<Grid key={index} item sm={index === 0 ? 3 : 2} xs={index === 0 ? 3 : 2}>\n                <Paper className={classes.tableItem}>\n                 <Typography variant=\"body1\"> {item} </Typography>\n                </Paper>\n            </Grid>)\n        })}\n        </Fragment>\n    )\n    return (\n        <Fragment>\n            {itemMarkup}\n        </Fragment>\n    )\n}\n\nexport default ItemRow\n","import React, {Fragment, useState, useEffect} from 'react'\nimport { useQuery, gql } from '@apollo/client';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport ItemRow from './ItemRow';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport {myTheme} from './theme'\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography } from '@material-ui/core';\nimport { useNutrition } from './Context';\nimport Button from '@material-ui/core/Button';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\n\nconst useStyles = makeStyles(() => (myTheme));\n\nconst NUTRITION_DATA = gql`\n  query {\n    desserts {\n      id,\n      dessert,\n      reset,\n      visible,\n      nutritionInfo {\n        calories\n        fat\n        carb\n        protein\n      }\n    }\n  }\n`;\n\n\nconst Items = () => {\n    const classes = useStyles();\n\n    let {loading, error, data, refetch, sort, setSort, windowWidth} = useNutrition();\n\n    let markupData = loading ? <CircularProgress /> : (\n        data.desserts.map((item: { visible: any; }, index: string | number | null | undefined) => {\n          return item.visible ? <ItemRow key={index} item={item}/>: <Fragment key={index}> </Fragment>\n        })\n      )\n    const tableHeaders = [\n        \"Dessert(100g serving)\",\n        \"Calories\",\n        \"Fat\",\n        \"Carbs\",\n        \"Protein\"\n    ];\n    const handleSort = (index: number) => {\n      if(index === 0) return\n      if(sort.index === index) {\n        setSort({...sort, order: !sort.order});\n      } else {\n        setSort({index, order: 0});\n      }\n    }\n    let arrowDir = sort.order ? \n    <ArrowDownwardIcon className={classes.arrowStyle}/> : \n    <ArrowUpwardIcon className={classes.arrowStyle}/>\n    let headermarkup = tableHeaders.map((item, index) => {\n        return (\n            <Grid key={index} item sm={index === 0 ? 3 : 2} xs={index === 0 ? 3 : 2}>\n            <Paper className={classes.tableHead}>\n                <Button onClick={() => handleSort(index)} size={windowWidth < 800 ? \"small\" : \"large\"}>    {item} \n                {index !== 0 && \n                (sort.index === index ? \n                arrowDir : \n                <ArrowDownwardIcon className={classes.generalArrowStyle} />)}\n                </Button>\n            </Paper>\n            </Grid>\n        )\n    })\n        \n\n    return (\n        <Fragment>\n            <Grid container spacing={0}>\n                <Grid item sm={1} xs={1}>\n                <Paper className={classes.tableHead}></Paper>\n                </Grid>\n                {headermarkup}\n                {markupData}\n            </Grid>\n        </Fragment>\n    )\n}\n\nexport default Items\n","import React, {useState, FunctionComponent } from 'react'\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nimport { gql, useMutation } from '@apollo/client';\nimport { useNutrition } from './Context';\nimport { Typography } from '@material-ui/core';\n\nconst ADD_DESSERT = gql`\n  mutation AddDessert(\n    $dessert: String!, \n    $calories: Int!,\n    $fat: Int!,\n    $carb: Int!,\n    $protein: Int!\n    ){\n    addDessert(\n      dessert: $dessert,\n      calories: $calories,\n      fat: $fat,\n      carb: $carb,\n      protein: $protein\n\n    ) {\n      id\n      dessert\n    }\n  }\n`;\n\nconst AddDessert = () => {\n    const [open, setOpen] = useState(false);\n    const [editState, setEditState] = useState({\n        dessert: '',\n        calories: '',\n        fat: '',\n        carb: '',\n        protein: ''\n    });\n    \n    const [addDessert, { data }] = useMutation(ADD_DESSERT);\n    const [error, setError] = useState<string>('');\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n    const handleChange = (event: React.ChangeEvent<HTMLTextAreaElement>) => {\n        const target = event.target as HTMLTextAreaElement;\n        setEditState({\n            ...editState,\n            [target.id]: target.value\n        })\n        setError('');\n    }\n    let {refetch, setSelected, setResetState} = useNutrition();\n    const handleSubmit = () => {\n        if(editState.dessert === '' ||\n            editState.calories === '' ||\n            editState.fat === '' ||\n            editState.carb === '' ||\n            editState.protein === ''\n        ) {\n            setError('Fields missing')\n            return;\n        }\n        addDessert({\n            variables: {\n                dessert: editState.dessert,\n                calories: parseInt(editState.calories),\n                fat:  parseInt(editState.fat),\n                carb: parseInt(editState.carb),\n                protein:parseInt(editState.protein)\n            }\n        });\n        setEditState({\n            dessert: '',\n            calories: '',\n            fat: '',\n            carb: '',\n            protein: ''\n        });\n        setOpen(false);\n        refetch();\n        setSelected([]); \n        setResetState([]);\n    }\n    return (\n        <div>\n            <input id=\"dessertDialog\" hidden={true} onClick={handleClickOpen}/>\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n                <DialogTitle id=\"form-dialog-title\">Add Dessert</DialogTitle>\n                <DialogContent>\n                <TextField\n                    autoFocus\n                    value={editState.dessert}\n                    onChange={handleChange}\n                    margin=\"dense\"\n                    name=\"dessert\"\n                    id=\"dessert\"\n                    label=\"Dessert\"\n                    type=\"text\"\n                    fullWidth\n                    required\n                />\n                <TextField\n                value={editState.calories}\n                onChange={handleChange}\n                    margin=\"dense\"\n                    name=\"calories\"\n                    id=\"calories\"\n                    label=\"Calories\"\n                    type=\"number\"\n                    fullWidth\n                    required\n                />\n                <TextField\n                value={editState.fat}\n                onChange={handleChange}\n                    margin=\"dense\"\n                    name=\"fat\"\n                    id=\"fat\"\n                    label=\"Fat\"\n                    type=\"number\"\n                    fullWidth\n                    required\n                />\n                <TextField\n                value={editState.carb}\n                onChange={handleChange}\n                    margin=\"dense\"\n                    name=\"carb\"\n                    id=\"carb\"\n                    label=\"Carb\"\n                    type=\"number\"\n                    fullWidth\n                    required\n                />\n                <TextField\n                value={editState.protein}\n                onChange={handleChange}\n                    margin=\"dense\"\n                    name=\"protein\"\n                    id=\"protein\"\n                    label=\"Protein\"\n                    type=\"number\"\n                    fullWidth\n                    required\n                />\n                {error && <Typography style={{color: \"#dd2c00\"}}>{error}</Typography>}\n                </DialogContent>\n                <DialogActions>\n                <Button onClick={handleClose} color=\"primary\">\n                    Cancel\n                </Button>\n                <Button onClick={handleSubmit} color=\"primary\">\n                    Add\n                </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    )\n}\n\nexport default AddDessert\n","import React, {Fragment} from 'react'\nimport Button from '@material-ui/core/Button';\n\nimport Grid from '@material-ui/core/Grid';\n\nimport Typography from '@material-ui/core/Typography';\n\nimport {\n  createMuiTheme,\n  makeStyles,\n  withStyles,\n  Theme,\n  StyleRulesCallback ,\n  createStyles,\n  Theme as AugmentedTheme,\n  ThemeProvider,\n} from '@material-ui/core/styles';\n\nimport Paper from '@material-ui/core/Paper';\nimport Items from './Items';\n\nimport {myTheme} from './theme'\nimport AddDessert from './AddDessert';\nimport { useNutrition } from './Context';\nimport { gql, useMutation } from '@apollo/client';\n\nconst DELETE_DESSERT = gql`\n  mutation deleteDessert(\n    $id: Int!\n    ){\n    deleteDessert(\n      id: $id\n    ) {\n      id\n      dessert\n    }\n  }\n`;\nconst MAKE_INVISIBLE = gql`\n  mutation makeInvisible(\n    $id: Int!\n    ){\n    makeInvisible(\n      id: $id\n    ) {\n      id\n      dessert\n    }\n  }\n`;\nconst UPDATE_VISIBILITY = gql`\n  mutation updateDessertVisibility(\n    $id: Int!\n    ){\n        updateDessertVisibility(\n      id: $id\n    ) {\n      id\n      dessert\n    }\n  }\n`;\ndeclare module '@material-ui/core/styles/createMuiTheme' {\n  interface Theme {\n    status: {\n      danger: string;\n    };\n  }\n  // allow configuration using `createMuiTheme`\n  interface ThemeOptions {\n    status?: {\n      danger?: string;\n    };\n  }\n}\nconst useStyles = makeStyles(myTheme);\n\n//const styles: StyleRulesCallback = (theme: Theme) => (myTheme);\n\n\nfunction Home() {\n  const classes = useStyles();\n  //const myRef = React.useRef<HTMLInputElement>(null);\n  const handleAddItem = () => {\n    const fileInput = document.getElementById('dessertDialog');\n    if(fileInput !== null)\n      fileInput.click();\n  }\n\n  let {\n      selected, \n      setSelected,\n      resetState, \n        setResetState,\n        data,\n        setSort\n    } = useNutrition();\n  const [deleteDessert] = useMutation(DELETE_DESSERT);\n  const [makeInvisible] = useMutation(MAKE_INVISIBLE);\n  const [updateDessertVisibility] = useMutation(UPDATE_VISIBILITY);\n  const handleDelete = () => {\n    if(selected.length > 0)\n    selected.forEach((item: string) => {\n        deleteDessert({\n            variables: {\n                id: parseInt(item)\n            }\n        });\n    })\n    if(resetState.length > 0)\n    resetState.forEach((item: string) => {\n        makeInvisible({\n            variables: {\n                id: parseInt(item)\n            }\n        });\n    })\n    setResetState([]);\n    setSelected([]);\n  }\n\n  const handleReset = () => {\n    if(data.desserts && data.desserts.length > 0)\n    data.desserts.forEach((item: { reset: any; id: string; }) => {\n        if(item.reset) {\n            updateDessertVisibility({\n                variables: {\n                    id: parseInt(item.id)\n                }\n            });\n        } else {\n            deleteDessert({\n                variables: {\n                    id: parseInt(item.id)\n                }\n            });\n        }\n    })\n    setSort({index: null, order: 0})\n    setSelected([]);\n  }\n  return (\n      <Fragment>\n     <Grid  container spacing={3}>\n        <Grid item xs={12} sm={6}>\n            \n        <Paper className={classes.paper}>\n          \n          <Typography variant=\"h3\" className={classes.heading}> \n            Nutrition List\n          </Typography>\n          </Paper>\n        \n        </Grid>\n        <Grid item xs={12} sm={6}>\n        <Paper className={classes.paper}>\n          <Button className={classes.button} onClick={handleReset}>\n              Reset\n          </Button>\n          </Paper>\n        </Grid>\n        <Grid item sm={6} xs={12}>\n          <Paper className={classes.heading2}>\n          \n          <Typography variant=\"h5\" className={classes.heading2_text}> \n            {selected.length + resetState.length} selected\n          </Typography>\n          </Paper>\n        </Grid>\n        <Grid item xs={6} sm={3}>\n          <Paper className={classes.paper}>\n          <Button className={classes.addButton} onClick = {handleAddItem}>\n            ADD ITEM\n          </Button>\n          </Paper>\n        </Grid>\n        <Grid item xs={6} sm={3}>\n          <Paper className={classes.paper}>\n          <Button className={classes.deleteButton} onClick={handleDelete}>\n            DELETE ITEM\n          </Button>\n          </Paper>\n        </Grid>\n        <Items/>\n      </Grid>\n      <AddDessert/>\n      </Fragment>\n  );\n}\n\nexport default Home;\n","import React from 'react'\n\nimport { ApolloProvider } from '@apollo/client';\n\nimport {client} from './graphql'\n\nimport Context from './components/Context';\n\nimport Home from './components/Home';\n\n\nfunction App() {\n\n  return (\n    <ApolloProvider client={client}>\n      <Context>\n        <Home/>\n      </Context>\n      </ApolloProvider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.Fragment>\n    <App />\n  </React.Fragment>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}